C51 COMPILER V9.00   MOTOR                                                                 05/17/2015 10:57:33 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MOTOR
OBJECT MODULE PLACED IN Motor.OBJ
COMPILER INVOKED BY: F:\Keil\C51\BIN\C51.EXE Motor.c BROWSE DEBUG OBJECTEXTEND

line level    source

*** WARNING C500 IN LINE 1 OF MOTOR.C: LICENSE ERROR (R208: RENEW LICENSE ID CODE (LIC))

   1          /*
   2           * =============================================================
   3           *
   4           *       Filename:  Motor.c
   5           *
   6           *    Description:  电机驱动c文件  通过L298N驱动电机
   7           *
   8           *        Version:  1.0.1
   9           *        Created:  2015.5.13
  10           *       Revision:  first
  11           *       Compiler:  Keil μVision 4
  12           *
  13           *         Author:  杨君英、王锴
  14           *              Email:  513814330@qq.com
  15           *                 QQ:  513814330
  16           *
  17           * =============================================================
  18           */
  19           /*********************************************
  20                          包含头文件
  21          **********************************************/ 
  22          #include        "motor.h"
  23          #include        <reg52.h>
  24          #include    <intrins.h>
  25          /*********************************************
  26                          引脚位定义
  27          **********************************************/ 
  28          //---------- L298N ------------//
  29          sbit    RIGHT_IN1 =     P1^3;     //右边电机 信号1
  30          sbit    RIGHT_EN  =     P1^4;     //右边电机 使能
  31          sbit    RIGHT_IN2 =     P1^5;     //右边电机 信号2
  32                                                             
  33          sbit    LEFT_IN1 =      P1^2;     //左边电机 信号1
  34          sbit    LEFT_EN  =      P1^1;     //左边电机 使能
  35          sbit    LEFT_IN2 =      P1^0;     //左边电机 信号2
  36          
  37          //---------- ST188 ------------//
  38          sbit    Sensor1  = P0^0;          //传感器1
  39          sbit    Sensor2  = P0^1;          //传感器2
  40          sbit    Sensor3  = P0^2;          //传感器3
  41          sbit    Sensor4  = P0^3;          //传感器4
  42          sbit    Sensor5  = P0^4;          //传感器5
  43          
  44          /*********************************************
  45                            宏定义
  46          **********************************************/
  47          #define PWM_PERIOD  100       //PWM周期最大值 PWM_PERIOD*100us
  48          #define STR_FIX 1.2           //直线修正 表示左边比右边快多少倍（走直线时左拐则改大 右拐则改小）
  49          
  50          /*********************************************
  51                          变量定义
  52          **********************************************/
  53          //---------- PWM ------------//
  54          uchar   PWM_COUNTER = 0;      //pwm产生周期 100*100us
C51 COMPILER V9.00   MOTOR                                                                 05/17/2015 10:57:33 PAGE 2   

  55          uchar   LEFT_PWM_DUTY  = 50;  //左边电机占空比
  56          uchar   RIGHT_PWM_DUTY = 50;  //右边电机占空比
  57          
  58          /*********************************************
  59          函数名称： Delay_10Us
  60          函数功能： us延时函数
  61          函数输入： us-延时时间控制变量
  62          函数输出： 无
  63          **********************************************/
  64          void Delay_10Us(uint us)
  65          {
  66   1              while( us-- );
  67   1      }
  68          
  69          /*********************************************
  70          函数名称： DelayMs
  71          函数功能： ms级延时函数，延时时间：ms*ms
  72          函数输入： ms-延时时间控制变量
  73          函数输出： 无
  74          **********************************************/
  75          void DelayMs(uint ms)
  76          {
  77   1              unsigned int i,j;
  78   1              for( i = 0; i < ms; i ++ )
  79   1                      for( j = 115; j > 0; j --);
  80   1      }
  81          
  82          /*********************************************
  83          函数名称： Init_Motor
  84          函数功能： 初始化单片机的定时0(用于产生PWM)
  85          函数输入： 无
  86          函数输出： 无
  87          **********************************************/
  88          void Init_Motor(void)
  89          {
  90   1         TMOD = (TMOD&0xF0)|0x02;       //设定T0的工作模式为2
  91   1         //----装入定时器初值 -----//
  92   1         TH0 = 0x95;                    //100us定时 用于占空比控制
  93   1         TL0 = 0x95;  
  94   1      
  95   1         ET0 = 1;                       // 定时器0允许中断 
  96   1         TR0 = 1;                       // 启动定时器0 
  97   1         EA  = 1;                       // 开总中断 
  98   1      }
  99          
 100          /*********************************************
 101          函数名称： Timer0_ISR
 102          函数功能： 定时器0中断服务函数,用于输出PWM波
 103          函数输入： 无
 104          函数输出： 无
 105          **********************************************/
 106          void Timer0_ISR(void) interrupt 1 using 1
 107          {
 108   1              PWM_COUNTER ++;
 109   1              if(PWM_COUNTER < PWM_PERIOD)
 110   1              {
 111   2                      if(PWM_COUNTER > LEFT_PWM_DUTY)  LEFT_EN  = 0;
 112   2                      if(PWM_COUNTER > RIGHT_PWM_DUTY) RIGHT_EN = 0;
 113   2              }
 114   1              else 
 115   1              {
 116   2                      PWM_COUNTER = 0;        
C51 COMPILER V9.00   MOTOR                                                                 05/17/2015 10:57:33 PAGE 3   

 117   2                      LEFT_EN  = 1;
 118   2                      RIGHT_EN = 1;
 119   2              }
 120   1      }
 121          
 122          /*********************************************
 123          函数名称： Stop
 124          函数功能： 停车函数
 125          函数输入： speed_left -左轮占空比
 126                     speed_right-右轮占空比
 127          函数输出： 无
 128          **********************************************/
 129          void Stop(uchar speed_left,uchar speed_right)
 130          {
 131   1              LEFT_IN1  = 0;
 132   1              LEFT_IN2  = 0;
 133   1      
 134   1              RIGHT_IN1 =     0;
 135   1              RIGHT_IN2 =     0;
 136   1              LEFT_PWM_DUTY  = speed_left;
 137   1              RIGHT_PWM_DUTY = speed_right;
 138   1      }
 139          
 140          /*********************************************
 141          函数名称： GoHead
 142          函数功能： 前进函数：控制小车以一定速度直线前进，也可以
 143                     控制小车转弯
 144          函数输入： speed_left -左轮占空比
 145                     speed_right-右轮占空比
 146          函数输出： 无
 147          **********************************************/
 148          void GoHead(uchar speed_left,uchar speed_right)
 149          {
 150   1              LEFT_IN1  = 0;
 151   1              LEFT_IN2  = 1;
 152   1      
 153   1              RIGHT_IN1 =     0;
 154   1              RIGHT_IN2 =     1;
 155   1              LEFT_PWM_DUTY  = (uchar)(speed_left*STR_FIX); //直线修正
 156   1              RIGHT_PWM_DUTY = speed_right;
 157   1      }
 158          
 159          /*********************************************
 160          函数名称： GoBack
 161          函数功能： 后退函数：控制小车以一定速度直线后退，也可以
 162                     小车后退转弯
 163          函数输入： speed_left -左轮占空比
 164                     speed_right-右轮占空比
 165          函数输出： 无
 166          **********************************************/
 167          void GoBack(uchar speed_left,uchar speed_right)
 168          {
 169   1              LEFT_IN1  = 1;
 170   1              LEFT_IN2  =     0;
 171   1              RIGHT_IN1 =     1;
 172   1              RIGHT_IN2 =     0;
 173   1              LEFT_PWM_DUTY  = (uchar)(speed_left*STR_FIX); //直线修正
 174   1              RIGHT_PWM_DUTY = speed_right;
 175   1      }
 176          /*********************************************
 177          函数名称： Goright
 178          函数功能： 右转90度函数：控制小车以一定速度旋转90度
C51 COMPILER V9.00   MOTOR                                                                 05/17/2015 10:57:33 PAGE 4   

 179          函数输入： speed_left -左轮占空比
 180                     speed_right-右轮占空比
 181          函数输出： 无
 182          **********************************************/
 183          void Goright_90(int delaytime)
 184          {
 185   1              LEFT_IN1  = 0;
 186   1              LEFT_IN2  = 1;
 187   1      
 188   1              RIGHT_IN1 =     1;
 189   1              RIGHT_IN2 =     0;
 190   1              LEFT_PWM_DUTY  = 26*2;
 191   1              RIGHT_PWM_DUTY = 26;
 192   1              DelayMs(delaytime);
 193   1      }
 194          /*********************************************
 195          函数名称： Goleft_180
 196          函数功能： 转180度函数：控制小车以一定速度从左旋转180度
 197          函数输入： speed_left -左轮占空比
 198                     speed_right-右轮占空比
 199          函数输出： 无
 200          **********************************************/
 201          void Goleft_180(int delaytime)
 202          {
 203   1              LEFT_IN1  = 1;
 204   1              LEFT_IN2  = 0;
 205   1              RIGHT_IN1 =     0;
 206   1              RIGHT_IN2 =     1;
 207   1              LEFT_PWM_DUTY  = 26-20;
 208   1              RIGHT_PWM_DUTY = 26;
 209   1              DelayMs(delaytime);
 210   1      }
 211          /**********************************************
 212          函数名称： Sensor
 213          函数功能： 传感器识别，根据传感器传入数据，返回一个
 214                             循迹变量
 215          函数输入： sbit          Sensor1  = P0^0          //传感器1
 216                     sbit          Sensor2  = P0^1          //传感器2
 217                             sbit          Sensor3  = P0^2          //传感器3
 218                             sbit          Sensor4  = P0^3          //传感器4
 219                             sbit          Sensor5  = P0^4          //传感器5
 220          函数输出： uchar     road_status                  //循迹变量
 221          **********************************************/
 222          uchar Sensor(Sensor1,Sensor2,Sensor3,Sensor4,Sensor5)
 223          {
 224   1              if((Sensor1==0 && Sensor2==0 && Sensor3==1 && Sensor4==0 && Sensor5==0)||(Sensor1==0 && Sensor2==1 && Sen
             -sor3==1 && Sensor4==1 && Sensor5==0)||(Sensor1==1 && Sensor2==1 && Sensor3==1 && Sensor4==1 && Sensor5==1)) return 0x04;
 225   1              if( Sensor1==0 && Sensor2==0 && Sensor3==0 && Sensor4==0 && Sensor5==0) return 0x00;
 226   1      
 227   1              if((Sensor1==0 && Sensor2==1 && Sensor3==1 && Sensor4==0 && Sensor5==0)||(Sensor1==1 && Sensor2==1 && Sen
             -sor3==1 && Sensor4==1 && Sensor5==0)) return 0x06;
 228   1              if((Sensor1==0 && Sensor2==1 && Sensor3==0 && Sensor4==0 && Sensor5==0)||(Sensor1==1 && Sensor2==1 && Sen
             -sor3==1 && Sensor4==0 && Sensor5==0)) return 0x02;
 229   1              if( Sensor1==1 && Sensor2==1 && Sensor3==0 && Sensor4==0 && Sensor5==0) return 0x03;
 230   1              if( Sensor1==1 && Sensor2==0 && Sensor3==0 && Sensor4==0 && Sensor5==0) return 0x01;
 231   1      
 232   1              if((Sensor1==0 && Sensor2==0 && Sensor3==1 && Sensor4==1 && Sensor5==0)) return 0x0C;
 233   1              if((Sensor1==0 && Sensor2==0 && Sensor3==0 && Sensor4==1 && Sensor5==0)) return 0x08;
 234   1              if( Sensor1==0 && Sensor2==0 && Sensor3==0 && Sensor4==1 && Sensor5==1) return 0x18;
 235   1              if( Sensor1==0 && Sensor2==0 && Sensor3==0 && Sensor4==0 && Sensor5==1) return 0x10;
 236   1      
 237   1              if((Sensor1==0 && Sensor2==0 && Sensor3==1 && Sensor4==1 && Sensor5==1)||(Sensor1==0 && Sensor2==1 && Sen
C51 COMPILER V9.00   MOTOR                                                                 05/17/2015 10:57:33 PAGE 5   

             -sor3==1 && Sensor4==1 && Sensor5==1)) return 0x05;
 238   1      }
*** WARNING C291 IN LINE 238 OF MOTOR.C: not every exit path returns a value


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    712    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
